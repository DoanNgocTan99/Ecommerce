@model Model.EF.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Seller/Views/Shared/_Layout.cshtml";
}

<h2>CHỈNH SỬA SẢN PHẨM </h2>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, id = "txtDes" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.DelPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.DelPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DelPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.WarrantyDate, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.WarrantyDate, new { type = "date" })
                @Html.ValidationMessageFor(model => model.WarrantyDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.Views, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextBoxFor(model => model.Views, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Views, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextBoxFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.CheckBoxFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        @*<div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextBoxFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.TextBoxFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                </div>
            </div>*@



        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.IdCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.IdCategory, null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdCategory, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.IdProgramme, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.IdProgramme, null, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdProgramme, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                @{ if (Model.Images.FirstOrDefault() == null)
                    {
                        <img src="" width="200px" height="200px" />
                    }
                    else
                    {
                        <img src="@Url.Content(Model.Images.FirstOrDefault().Path.Substring(49))" width="200px" height="200px" />
                    }
                }
            </div>
            <div class="col-md-10">
                <input type="file" name="ImageFile" required>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
